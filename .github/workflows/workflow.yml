name: Workflow

on: [push]

jobs:
  pycodestyle-and-pytest:
    name: Run Pycodestyle, Pytest and Sonar scanner
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: Set up Python 3.9
      id: python-3_9
      uses: actions/setup-python@v3
      with:
        python-version: "3.9"
    - name: Install pipenv
      run: |
        python -m pip install --upgrade pipenv wheel
    - uses: actions/cache@v3
      id: cache-pipenv
      with:
        path: ~/.local/share/virtualenvs
        key: ${{ runner.os }}-python-${{ steps.python-3_99.outputs.python-version }}-pipenv-${{ hashFiles('Pipfile.lock') }}
    - name: Install packages
      if: steps.cache-pipenv.outputs.cache-hit != 'true'
      run: |
        pipenv install --dev
    - name: Analysing the code with Pycodestyle
      run: |
        pipenv run pycodestyle --ignore=E501 app/ tests/
    - name: Running tests with Pytest
      run: |
        pipenv run pytest --cov-report=term --cov-report=xml --cov=
      env:
        AWS_DEFAULT_REGION: "eu-central-1"
        app_name: ${{ github.event.repository.name }}
        app_stage: "test"
        app_timezone: "Europe/Budapest"
        jwt_secret: "x4mfd4KMaY5Mc6vIcTVJxAouH4CnfPsz"
        cache_service_base_url: "https://localhost"
    - name: Scan with Sonar scanner
      uses: sonarsource/sonarqube-scan-action@master
      with:
        args: >
          -Dsonar.language=python
          -Dsonar.organization=${{ secrets.SONAR_ORGANIZATION }}
          -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }}
          -Dsonar.python.coverage.reportPaths=coverage.xml
          -Dsonar.python.version=3.9
          -Dsonar.sources=app
          -Dsonar.tests=tests
          -Dsonar.verbose=true
      env:
        SONAR_HOST_URL: https://sonarcloud.io
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
