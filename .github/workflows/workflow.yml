name: Workflow

on: [push]

jobs:
  pycodestyle-and-pytest:
    name: Build
    runs-on: ubuntu-24.04
    env:
      Coverage_File: coverage.xml
    steps:

    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Cache venv
      uses: actions/cache@v4
      with:
        path: ~/.local/share/virtualenvs
        key: ${{ runner.os }}-venv-${{ hashFiles('Pipfile.lock') }}

    - name: Set up Python 3.13
      uses: actions/setup-python@v5
      with:
        cache: pipenv
        python-version: "3.13"

    - name: Install Pipenv
      run: |
        python -m pip install --upgrade pipenv wheel
        pipenv install --dev --python 3.13
        pipenv graph

    - name: Analyze code using Pycodestyle (strict mode)
      run: |
        pipenv run pycodestyle --ignore=E501,W503 app/ tests/ || exit 1

    - name: Run Bandit security scanner
      run: |
        pipenv run bandit --severity-level high --confidence-level high -r app/ -vvv
    
    - name: Running tests with Pytest and generate coverage
      run: |
        pipenv run python -m pytest --cov-report=term --cov-report=xml:$Coverage_File --cov=app

    - name: Fix source path(s) in coverage.xml
      run: |
        sed -i 's@'$GITHUB_WORKSPACE'@/github/workspace/@g' coverage.xml

    - name: Scan with Sonar scanner
      uses: sonarsource/sonarqube-scan-action@v2
      with:
        args: >
          -Dsonar.language=python
          -Dsonar.organization=${{ secrets.SONAR_ORGANIZATION }}
          -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }}
          -Dsonar.python.coverage.reportPaths=coverage.xml
          -Dsonar.python.version=3.13
          -Dsonar.sources=app
          -Dsonar.tests=tests
      env:
        SONAR_HOST_URL: https://sonarcloud.io
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
